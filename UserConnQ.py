#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.18
#  in conjunction with Tcl version 8.6
#    Nov 27, 2018 12:10:42 PM +0800  platform: Windows NT

import os
import requests
import sys
import xlrd
#import easygui
import re
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import UserConnQ
'''
import pymssql
import uuid
import _mssql
import decimal
decimal.__version__
_mssql.__version__'''


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    root.title('味全公司');
    top = Toplevel1 (root)
    "UserConnQ.init(root, top)"
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    UserConnQ.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

 
class Toplevel1():
    def OpenFile(self):
        os.startfile("\\\\10.10.1.36\\ManagementApproach\\總公司暨各事業單位電話_Portal.xls")
    def __init__(self, top=None):
        autocompleteList=[]
        '''conn = pymssql.connect(server="10.10.1.XXX", user="EfXXXXr", password="XXX1", database="XXXa", timeout=0, login_timeout=60, charset='UTF-8', as_dict=False, host='', appname=None, port='22507', conn_properties=None, autocommit=False, tds_version=None)
        cursor = conn.cursor()
        cursor.execute("select u2.id,u2.userName,u2.mailAddress,ou2.organizationUnitName,fd.functionDefinitionName from "+ 
                        "OrganizationUnit as ou2 "+  
                        "join Functions as f2 with (nolock) on f2.organizationUnitOID=ou2.OID and f2.isMain=1 "+ 
                        "join Users as u2 with (nolock) on  u2.OID=f2.occupantOID "+ 
                        "join FunctionDefinition as fd on fd.OID=f2.definitionOID "+
                        "where ou2.organizationOID='1c5b85fcc42410048f6cef01866cc71b'  order by id")
        row = cursor.fetchall()'''
        workbookN = xlrd.open_workbook(r'\\10.10.1.36\ManagementApproach\UserData.xlsx')
        sheet1N = workbookN.sheet_by_index(0)
        nrows = sheet1N.nrows
        ncols = sheet1N.ncols
        for  i in range(0,nrows):
        	 #for  j in range(0,ncols):
        	 autocompleteList.append(sheet1N.cell(i,0).value+'_'+sheet1N.cell(i,1).value)

        #for values in row:
           # autocompleteList.append(values[0]+'_'+values[1])
        
        
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("700x338+526+233")
        top.title("味全公司")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.414, rely=0.03, height=38, width=132)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''員工分機查詢''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.057, rely=0.237, height=18, width=52)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''姓名：''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.414, rely=0.237, height=18, width=42)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''部門：''')

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(relx=0.486, rely=0.237,height=17, relwidth=0.477)
        self.Entry2.configure(background="#d9d9d9")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")
        self.Entry2.configure(width=334)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.4, rely=0.296, height=38, width=62)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''員編：''')
        self.Label4.configure(width=62)

        self.Entry3 = tk.Entry(top)
        self.Entry3.place(relx=0.486, rely=0.325,height=17, relwidth=0.206)
        self.Entry3.configure(background="#d9d9d9")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="#c4c4c4")
        self.Entry3.configure(selectforeground="black")

        self.TProgressbar1 = ttk.Progressbar(top)
        self.TProgressbar1.place(relx=0.057, rely=0.473, relwidth=0.914
                , relheight=0.0, height=17)
        self.TProgressbar1.configure(length="640")

        #self.TButton1 = ttk.Button(top,command=self.QueryUser)
        #self.TButton1.place(relx=0.298, rely=0.154, height=23, width=77)
        #self.TButton1.configure(takefocus="")
        #self.TButton1.configure(text='''查詢''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.057, rely=0.621, height=18, width=52)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''分機：''')

        self.Entry4 = tk.Entry(top)
        self.Entry4.place(relx=0.143, rely=0.621,height=17, relwidth=0.206)
        self.Entry4.configure(background="#d9d9d9")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(highlightbackground="#d9d9d9")
        self.Entry4.configure(highlightcolor="black")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(selectbackground="#c4c4c4")
        self.Entry4.configure(selectforeground="black")

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.414, rely=0.621, height=18, width=52)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''信箱：''')

        self.Entry5 = tk.Entry(top)
        self.Entry5.place(relx=0.486, rely=0.621,height=17, relwidth=0.334)
        self.Entry5.configure(background="#d9d9d9")
        self.Entry5.configure(disabledforeground="#a3a3a3")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(foreground="#000000")
        self.Entry5.configure(highlightbackground="#d9d9d9")
        self.Entry5.configure(highlightcolor="black")
        self.Entry5.configure(insertbackground="black")
        self.Entry5.configure(selectbackground="#c4c4c4")
        self.Entry5.configure(selectforeground="black")
     
       
        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.057, rely=0.74, height=18, width=52)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''位置：''')



        self.Label8 = tk.Label(top)
        self.Label8.place(relx=0.7, rely=0.325, height=18, width=42)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''職稱：''')

        self.Entry6 = tk.Entry(top)
        self.Entry6.place(relx=0.757, rely=0.325,height=17, relwidth=0.206)
        self.Entry6.configure(background="#d9d9d9")
        self.Entry6.configure(disabledforeground="#a3a3a3")
        self.Entry6.configure(font="TkFixedFont")
        self.Entry6.configure(foreground="#000000")
        self.Entry6.configure(highlightbackground="#d9d9d9")
        self.Entry6.configure(highlightcolor="black")
        self.Entry6.configure(insertbackground="black")
        self.Entry6.configure(selectbackground="#c4c4c4")
        self.Entry6.configure(selectforeground="black")


        self.Entry1 = tk.Entry(top)
       # self.entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.129, rely=0.237,height=17, relwidth=0.206)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")
       
       # self.Label9 = tk.Label(top)
       # self.Label9.place(relx=0.011, rely=0.01, height=50, width=50)
        #self.Label8.configure(background="#d9d9d9")
        #photo = tk.PhotoImage(file='LOGO.png')
        #self.Label9.configure(image=photo)
        #self.Label9.image =photo
        
        
       # self.Label9.configure(background="#d9d9d9")
       # self.Label9.configure(disabledforeground="#a3a3a3")
       #self.Label9.configure(foreground="#000000")
       # self.Label9.configure(text='''Image''')

        self.Button1 = tk.Button(top,command=self.OpenFile)
        self.Button1.place(relx=0.143, rely=0.828, height=19, width=81)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''開啟座位表''')
        self.Button1.configure(width=81)
        


        self.Entry7 = tk.Entry(top)
        self.Entry7.place(relx=0.143, rely=0.74,height=17, relwidth=0.677)
        self.Entry7.configure(background="#d9d9d9")
        self.Entry7.configure(disabledforeground="#a3a3a3")
        self.Entry7.configure(font="TkFixedFont")
        self.Entry7.configure(foreground="#000000")
        self.Entry7.configure(insertbackground="black")
        self.Entry7.configure(width=474)

        self.val1 = tk.StringVar(root, value='')
        self.val1.trace('w', autocomplate(autocompleteList,self.Entry1,self.Entry3,self.Entry2,self.Entry6,self.Entry5,self.Entry4,self.Entry7))
        self.entry1 = tk.Entry(textvariable=self.val1)
        self.entry1.place(relx=0.129, rely=0.296, relheight=0.001
                , relwidth=0.01)
        self.entry1.configure(background="#d9d9d9")
        self.entry1.configure(disabledforeground="#a3a3a3")
        self.entry1.configure(font="TkFixedFont")
        self.entry1.configure(foreground="#000000")
        self.entry1.configure(width=144)
        self.addrow =ttk.Button(top,text="Test", width=12, command=self.addrow)

       

       

        
        
        #tk.Entry.__init__(self, *args, **kwargs)
        #self.focus()
        
    def addrow(self):
        print( self.entry.get() + ", " + self.val1.get() )
        self.art.set("")

class autocomplate(tk.Entry):
    def __init__(self, autocompleteList,entryAuto,entryUserid,entryDept,entryTitle,entryMail,entryExt,entryLocal):
           
            self.autocompleteList = autocompleteList
            self.var = entryAuto["textvariable"]
            self.entryAuto=entryAuto
            self.entryUserid=entryUserid
            self.entryDept=entryDept
            self.entryTitle=entryTitle
            self.entryMail=entryMail
            self.entryExt=entryExt
            self.entryLocal=entryLocal
            #self.entryImage=entryImage
            #print('bernice',self.var)
            if self.var == '':
                self.var =entryAuto["textvariable"] = tk.StringVar()
            self.var.trace('w', self.changed)
            entryAuto.bind("<Return>",self.selection)
            entryAuto.bind("<Right>", self.selection)
            entryAuto.bind("<Up>", self.moveUp)
            entryAuto.bind("<Down>", self.moveDown)
            entryAuto.listboxUp = False
    def changed(self, name, index, mode):
        if self.var.get() == '':
            if self.entryAuto.listboxUp:
                self.listbox.destroy()
                self.entryAuto.listboxUp = False
        else:
          
            words = self.comparison()
            if words:
                if not self.entryAuto.listboxUp:
                    self.listbox = tk.Listbox(width=23, height=8)
                    #print( dir(self.listbox))
                    self.listbox.bind("<Return>", self.selection)
                    self.listbox.bind("<Button-1>", self.selection)
                    self.listbox.bind("<Right>", self.selection)
                    self.listbox.place(x=self.entryAuto.winfo_x(), y=self.entryAuto.winfo_y() + self.entryAuto.winfo_height())
                    self.entryAuto.listboxUp = True

                self.listbox.delete(0, tk.END)
                for w in words:
                    self.listbox.insert(tk.END,w)
            else:
                if self.entryAuto.listboxUp:
                    self.listbox.destroy()
                    self.entryAuto.listboxUp = False

    def selection(self, event):
        if self.entryAuto.listboxUp:
            lb_sty_cur = self.listbox.curselection()
            lb_sty_get=''
            if lb_sty_cur:
                lb_sty_get = self.listbox.get(lb_sty_cur)
                self.var.set(lb_sty_get)
                 #透過員編及姓名再去找其他的值
                self.findAllValue(self.var.get().split("_")[0],self.var.get().split("_")[1])
                self.var.set(self.var.get().split("_")[1])
                self.listbox.destroy()
                self.entryAuto.listboxUp = False
                self.entryAuto.icursor(tk.END)
                self.QueryUser()
    def moveUp(self, event):
        if self.entryAuto.listboxUp:
            if self.listbox.curselection() == ():
                index = '0'
            else:
                index = self.listbox.curselection()[0]

            if index != '0':
                self.listbox.selection_clear(first=index)
                index = str(int(index) - 1)

                self.listbox.see(index) # Scroll!
                self.listbox.selection_set(first=index)
                self.listbox.activate(index)

    def moveDown(self, event):
        if self.entryAuto.listboxUp:
            if self.listbox.curselection() == ():
                index = '0'
            else:
                index = self.listbox.curselection()[0]

            if index != tk.END:
                self.listbox.selection_clear(first=index)
                index = str(int(index) + 1)

                self.listbox.see(index) # Scroll!
                self.listbox.selection_set(first=index)
                self.listbox.activate(index)

    def comparison(self):
        #print("Bernice2=>",self.var.get())
        return [ w for w in self.autocompleteList if self.matches(self.var.get(), w) ]
    def matches(self,fieldValue, acListEntry):
        return re.compile(fieldValue.encode("utf8"),  re.IGNORECASE).findall(acListEntry.encode("utf8"))#正規表示式的規則 模組，escape 在正規表示式中用到保留字 就不用用反斜線

    def findAllValue(self,userid,username):
        #print(dir(Toplevel1))
        '''conn = pymssql.connect(server="10.10.X.XXX", user="XXSXXXr", password="XXX", database="XXXX", timeout=0, login_timeout=60, charset='UTF-8', as_dict=False, host='', appname=None, port='22507', conn_properties=None, autocommit=False, tds_version=None)
        cursor = conn.cursor()
        cursor.execute("select u2.id,u2.userName,u2.mailAddress,ou2.organizationUnitName,fd.functionDefinitionName from "+ 
                        "OrganizationUnit as ou2 "+  
                        "join Functions as f2 with (nolock) on f2.organizationUnitOID=ou2.OID and f2.isMain=1 "+ 
                        "join Users as u2 with (nolock) on  u2.OID=f2.occupantOID "+ 
                        "join FunctionDefinition as fd on fd.OID=f2.definitionOID "+
                        "where ou2.organizationOID='1c5b85fcc42410048f6cef01866cc71b' and u2.id='"+userid+"' and u2.userName='"+username+"' order by id")
        row = cursor.fetchall()'''

        workbookR = xlrd.open_workbook(r'\\10.10.1.36\ManagementApproach\UserData.xlsx')
        sheet1R = workbookR.sheet_by_index(0)
        nrows = sheet1R.nrows
        ncols = sheet1R.ncols
        for  i in range(0,nrows):
        	 #for  j in range(0,ncols):
           # print(sheet1R.cell(i,0).value)
           # print(sheet1R.cell(i,1).value)
            if(str(sheet1R.cell(i,0).value).strip()==userid and str(sheet1R.cell(i,1).value).strip()==username):
                 self.entryUserid.delete(0, tk.END)
                 self.entryUserid.insert(10,sheet1R.cell(i,0).value)
                 self.entryDept.delete(0, tk.END)
                 self.entryDept.insert(10,sheet1R.cell(i,3).value)
                 self.entryTitle.delete(0, tk.END)
                 self.entryTitle.insert(10,sheet1R.cell(i,4).value)
                 self.entryMail.delete(0, tk.END)
                 self.entryMail.insert(10,sheet1R.cell(i,2).value)
                 break
        '''
        for values in row:
            self.entryUserid.delete(0, tk.END)
            self.entryUserid.insert(10,values[0])
            self.entryDept.delete(0, tk.END)
            self.entryDept.insert(10,values[3])
            self.entryTitle.delete(0, tk.END)
            self.entryTitle.insert(10,values[4])
            self.entryMail.delete(0, tk.END)
            self.entryMail.insert(10,values[2])'''
            

    def QueryUser(self):
        workbook = xlrd.open_workbook(r'\\10.10.1.36\ManagementApproach\總公司暨各事業單位電話_Portal.xls')
        print(self.var.get())


        sheet1 = workbook.sheet_by_index(0)
        nrows = sheet1.nrows
        ncols = sheet1.ncols
        Extension=''
        localName=''
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet1.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='總公司11樓'
        	 		 if(sheet1.cell(i+1,j).value==''):
        	 		 	Extension=sheet1.cell(i+2,j).value
        	 		 	break;
        	 		 else:
        	 		 	Extension=sheet1.cell(i+1,j).value
        	 		 	break;
        	 		 
        sheet2 = workbook.sheet_by_index(1)
        nrows = sheet2.nrows
        ncols = sheet2.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet2.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='總公司10樓'
        	 		 if(sheet2.cell(i+1,j).value==''):
        	 		 	Extension=sheet2.cell(i+2,j).value
        	 		 	break;
        	 		 	
        	 		 else:
        	 		 	Extension=sheet2.cell(i+1,j).value
        	 		 	break;
        	 		 	
        sheet3 = workbook.sheet_by_index(2)
        nrows = sheet3.nrows
        ncols = sheet3.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet3.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='總公司9樓'
        	 		 if(sheet3.cell(i+1,j).value==''):
        	 		 	Extension=sheet3.cell(i+2,j).value
        	 		 	break;
        	 		 else:
        	 		 	Extension=sheet3.cell(i+1,j).value
        	 		 	break;
        sheet4 = workbook.sheet_by_index(3)
        nrows = sheet4.nrows
        ncols = sheet4.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet4.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='總公司8樓'
        	 		 if(sheet4.cell(i+1,j).value==''):
        	 		 	Extension=sheet4.cell(i+2,j).value
        	 		 	break;
        	 		 else:
        	 		 	Extension=sheet4.cell(i+1,j).value
        	 		 	break;
        #中央研究所
        sheet5= workbook.sheet_by_index(4)
        nrows = sheet5.nrows
        ncols = sheet5.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet5.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='中央研究所'
        	 		 Extension=sheet5.cell(i-1,j).value
        	 		 break;
        #林鳳營牧場	 		 
        sheet7 = workbook.sheet_by_index(7)
        nrows = sheet7.nrows
        ncols = sheet7.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet7.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='林鳳營牧場 電話：06-6994646'
        	 		 if(sheet7.cell(i+1,j).value==''):
        	 		 	Extension=sheet7.cell(i+2,j).value
        	 		 	break;
        	 		 	
        	 		 else:
        	 		 	Extension=sheet7.cell(i+1,j).value
        	 		 	break;
        #台中廠	 		 
        sheet8 = workbook.sheet_by_index(8)
        nrows = sheet8.nrows
        ncols = sheet8.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet8.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='台中廠 電話：04-2339-6002'
        	 		 if(sheet8.cell(i+1,j).value==''):
        	 		 	Extension=sheet8.cell(i+2,j).value
        	 		 	break;
        	 		 	
        	 		 else:
        	 		 	Extension=sheet8.cell(i+1,j).value
        	 		 	break;
       #斗六廠	 		 
        sheet9 = workbook.sheet_by_index(9)
        nrows = sheet9.nrows
        ncols = sheet9.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet9.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='斗六廠 電話：05-5325004'
        	 		 if(sheet9.cell(i+1,j).value==''):
        	 		 	Extension=sheet9.cell(i+2,j).value
        	 		 	break;
        	 		 	
        	 		 else:
        	 		 	Extension=sheet9.cell(i+1,j).value
        	 		 	break;
       #高雄廠	 		 
        sheet10 = workbook.sheet_by_index(10)
        nrows = sheet10.nrows
        ncols = sheet10.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet10.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='高雄廠 電話：07-6976716'
        	 		 if(sheet10.cell(i+1,j).value==''):
        	 		 	Extension=sheet10.cell(i+2,j).value
        	 		 	break;
        	 		 	
        	 		 else:
        	 		 	Extension=sheet10.cell(i+1,j).value
        	 		 	break;
       #五股	 		 
        sheet19 = workbook.sheet_by_index(19)
        nrows = sheet19.nrows
        ncols = sheet19.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet19.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='五股 電話：02-22901716'
        	 		 #if(sheet19.cell(i+1,j).value==''):
        	 		 Extension=sheet19.cell(i,j+1).value
        	 		 break;
        	 		 	
        	 		 #else:
        	 		 	#Extension=sheet19.cell(i+1,j).value
        	 		 	#break;
       #南港 		 
        sheet20 = workbook.sheet_by_index(20)
        nrows = sheet20.nrows
        ncols = sheet20.ncols
        for  i in range(0,nrows):
        	 for  j in range(0,ncols):
        	 	if(str(sheet20.cell(i,j).value).strip()==self.var.get()):
        	 		 localName='南港 電話：02-27863332'
        	 		 #if(sheet19.cell(i+1,j).value==''):
        	 		 Extension=sheet20.cell(i,j+1).value
        	 		 break;
        	 		 	
        	 		 #else:
        	 		 	#Extension=sheet19.cell(i+1,j).value
        	 		 	#break;


        self.entryExt.delete(0, tk.END)
        self.entryLocal.delete(0, tk.END)
        if Extension !='' :
            self.entryExt.insert(10,str(int(Extension)))
            self.entryLocal.insert(10, localName)
            #photo = tk.PhotoImage(file='31.png')
            #self.entryImage.configure(image=photo)
            #self.entryImage.image =photo

if __name__ == '__main__':
    vp_start_gui()





